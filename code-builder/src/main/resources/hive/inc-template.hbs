invalidate metadata;
-- 创建表
create table if not exists {{database}}.dwd_{{table_name}} (
horus_id				string,
{{#each columns}}{{name}}        {{dataType}}{{#unless @last}},{{/unless}}
{{/each}})
PARTITIONED BY (
pt string)
STORED AS PARQUET
TBLPROPERTIES (
'parquet.compression'='SNAPPY'
);

-- 增量插入
insert overwrite table {{database}}.dwd_{{table_name}} partition(pt='${PT_DATE}')
select 
    horus_id,
    {{#each columns}}{{name}}{{#unless @last}},{{/unless}}
    {{/each}}
from (select
        first_value(horus_id) over (partition by {{partition_column}} order by {{inc_column}} asc) as horus_id,
        {{partition_column}},{{#each columns}}{{#unequals name partition_column}}first_value({{name}}) over (partition by {{partition_column}} order by {{inc_column}} desc) as {{name}}{{#unless @last}},{{/unless}}{{/unequals}}
        {{/each}}
    from (select 
            horus_id,
            {{#each columns}}{{name}}{{#unless @last}},{{/unless}}
            {{/each}}
        from {{database}}.dwd_{{table_name}} where pt = '${YPT_DATE}'
        union all
        select 
            uuid() as horus_id,
            {{#each columns}}{{name}}{{#unless @last}},{{/unless}}
            {{/each}}
        from {{database}}.s_{{table_name}} where pt = '${PT_DATE}') as inner_tmp
    ) as tmp
    group by horus_id, {{#each columns}}{{name}}{{#unless @last}},{{/unless}}{{/each}};